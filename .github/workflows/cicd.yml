name: Play.Trading service CICD

on:
  push:
    branches: ["master"]

jobs:
  generate-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3

      - name: Github Tag Bump
        id: tag_bump
        uses: anothrNick/github-tag-action@1.62.0
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          WITH_v: true
          INITIAL_VERSION: 1.0.2
          DEFAULT_BUMP: patch

    outputs:
      new_version: ${{steps.tag_bump.outputs.new_tag}}

  build-and-publish-container:
    runs-on: ubuntu-latest
    needs: generate-version
    permissions:
      id-token: write
      contents: read
      packages: read
    steps:
      - uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1.4.3
        with:
          client-id: ${{secrets._AZURE_CLIENT_ID}}
          tenant-id: ${{secrets._AZURE_TENANT_ID}}
          subscription-id: ${{secrets._AZURE_SUB_ID}}

      - name: ACR Login
        shell: pwsh
        run: |
          az acr login `
            --name ${{vars.AZ_ACR_REGISTRY_NAME}}

      - name: Build and publish docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: |
            ${{vars.AZ_ACR_REGISTRY_NAME}}.azurecr.io/play.trading:${{needs.generate-version.outputs.new_version}}
          build-args: |
            GITHUB_PAT=${{secrets.GITHUB_TOKEN}}

      - name: Get AKS credentials
        shell: pwsh
        run: |
          az aks get-credentials `
            --resource-group ${{vars.AZ_RG_NAME}} `
            --name ${{vars.AZ_AKS_CLUSTER_NAME}}

      - name: Install Helm
        uses: azure/setup-helm@v2.0

      - name: Login to Helm registry
        shell: pwsh
        run: |
          $helmPassword=az acr login `
            --name ${{vars.AZ_ACR_REGISTRY_NAME}} `
            --expose-token `
            --output tsv `
            --query accessToken

          helm registry login "${{vars.AZ_ACR_REGISTRY_NAME}}.azurecr.io" `
            --username ${{vars.HELM_USER_GUID}} `
            --password $helmPassword

      - name: Deploy Helm chart
        shell: pwsh
        inputs:
          helmChartVersion:
            description: Helm chart version
            required: true
            default: 0.1.3

        run: |
          $registry="${{vars.AZ_ACR_REGISTRY_NAME}}.azurecr.io"
          $namespace="trading"
          $serviceName="trading-service"        
          helm upgrade $serviceName oci://$registry/helm/microservice `
            --version ${{inputs.helmChartVersion}} `
            -f helm/values.yaml `
            -n $namespace `
            --set image.tag=${{needs.generate-version.outputs.new_version}} `
            --install `
            --wait
